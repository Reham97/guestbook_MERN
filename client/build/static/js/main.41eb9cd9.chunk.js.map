{"version":3,"sources":["components/NavBar.js","components/pages/Home.js","components/pages/Signin.js","components/pages/Signup.js","components/pages/CreateMessage.js","components/pages/UpdateMessage.js","components/reducers/userReducer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","history","useHistory","useContext","UserContext","state","dispatch","className","to","src","width","height","id","style","marginLeft","name","renderName","key","onClick","localStorage","clear","type","push","Home","useState","data","setData","useEffect","fetch","headers","getItem","then","res","json","result","console","log","messages","map","item","_id","postedBy","float","messageid","method","Authorization","newData","filter","padding","photo","title","body","comments","record","fontWeight","commentid","text","onSubmit","e","messageId","preventDefault","target","value","JSON","stringify","catch","err","placeholder","Signin","email","setEmail","password","setPassword","onChange","error","materialize","toast","html","classes","setItem","token","user","payload","Signup","setName","conPassword","setConPassword","length","test","message","CreateMessage","setTitle","setBody","image","setImage","url","setUrl","margin","maxWidth","textAlign","files","FormData","append","process","IMGURI","messageDetails","UpdateMessage","useParams","imageSrc","setImageSrc","updateImage","borderRadius","setMessageImage","reducer","action","createContext","Routing","parse","exact","path","App","useReducer","Provider","NavBar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41eb9cd9.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../App'\nconst Navbar = () => {\n    const history = useHistory()\n    const { state, dispatch } = useContext(UserContext)\n\n    const renderName = () => {\n        if (state) {\n            return <ul id=\"nav-mobile\" className=\"left hide-on-med-and-down\" style={{marginLeft:\"10%\"}}>{state ? \"Hi \" + state.name : \"\"}</ul>\n\n        }\n    }\n\n    const renderList = () => {\n        if (state) {\n            return [\n                <li key=\"createmess\"  ><Link to=\"/createmessage\" className=\"color-text\">Create Message</Link></li>,\n                <li key=\"logout\"> \n                    <button className=\"btn #c62828 blue darken-4\"\n                        onClick={() => {\n                            localStorage.clear()\n                            dispatch({ type: \"CLEAR\" })\n                            history.push('/signin')\n                        }}\n                    >\n                        Logout\n            </button>\n                </li>\n            ]\n        }\n        else {\n            return [\n                <li key=\"signin\"><Link to=\"/signin\" className=\"color-text\">Sign In</Link></li>,\n                <li key=\"signup\"><Link to=\"/signup\" className=\"color-text\">Sign Up</Link></li>\n\n            ]\n        }\n    }\n    return (\n\n        <nav>\n            <div className=\"nav-wrapper\">\n                <Link to={state ? \"/\" : \"signin\"} className=\"brand-logo\" >\n                    <img src=\"http://res.cloudinary.com/software1997/image/upload/v1599995809/date8bivdx6tibh5bvsb.webp\" width=\"100px\" height=\"60px\" />\n                </Link>\n                {renderName()}\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    {renderList()}\n                </ul>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar","import React, { useState, useEffect, useContext } from 'react'\nimport { UserContext } from '../../App'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  const [data, setData] = useState([])\n  const [comments, setComments] = useState([])\n  const { state, dispatch } = useContext(UserContext)\n  useEffect(() => {\n    fetch('/allmessages', {\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n      }\n    }).then(res => res.json())\n      .then(result => {\n        console.log(result)\n        setData(result.messages)\n      })\n  }, [])\n\n  const deleteMessage = (messageid) => {\n    fetch(`/deletemessage/${messageid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n      }\n    }).then(res => res.json())\n      .then(result => {\n        console.log(result)\n        const newData = data.filter(item => {\n          return item._id !== result._id\n        })\n        setData(newData)\n      })\n  }\n\n  const makeComment = (text, messageId) => {\n    fetch('/comment', {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n      },\n      body: JSON.stringify({\n        messageId,\n        text\n      })\n    }).then(res => res.json())\n      .then(result => {\n        const newData = data.map(item => {\n          if (item._id == result._id) {\n            return result\n          } else {\n            return item\n          }\n        })\n        setData(newData)\n      }).catch(err => {\n        console.log(err)\n      })\n  }\n\n\n  const deleteComment = (commentid) => {\n    fetch(`/deletecomment/${commentid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n      }\n    }).then(res => res.json())\n      .then(result => {\n        fetch('/allmessages', {\n          headers: {\n            \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n          }\n        }).then(res => res.json())\n          .then(result => {\n            console.log(result)\n            setData(result.messages)\n          })\n      })\n  }\n\n\n  return (\n    <div className=\"home\">\n      {\n        data.map(item => {\n          return (\n            <div className=\"card home-card\" key={item._id}>\n              {item.postedBy._id == state._id\n                ? <>\n                <i className=\"material-icons hand\" style={{\n                  float: \"right\"\n                }}\n                  onClick={() => deleteMessage(item._id)}\n                >delete</i>\n               <Link to={\"/updatemessage/\"+item._id}> \n                <i className=\"material-icons hand\" style={{\n                  float: \"right\"\n                }}\n                >edit</i></Link>\n                </>\n                : <></>\n              }\n\n              <h5 style={{ padding: \"5px\" }}>\n                <Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\"}>\n                  {item.postedBy.name}\n                </Link>\n              </h5>\n\n              <div className=\"card-image\">\n                <img src={item.photo} />\n              </div>\n              <div className=\"card-content\">\n\n\n\n\n\n                <h3><small>Title: </small>{item.title}</h3>\n                <h5><small>Description: </small>{item.body}</h5>\n                <h6>comments:</h6>\n\n                {\n                  item.comments.map(record => {\n                    return (\n                      <h6 key={record._id}><span style={{ fontWeight: \"500\" }}>({record.postedBy.name}) \n                         {record.postedBy._id == state._id\n                ? <i className=\"material-icons hand\" style={{}}\n                  onClick={() => deleteComment(record._id)}\n                >delete</i>\n\n                : <></>\n              } \n                      </span> {record.text}\n                    \n\n\n                      </h6>\n                    )\n                  })\n                }\n                <form onSubmit={(e) => {\n                  e.preventDefault()\n                  makeComment(e.target[0].value, item._id)\n                }}>\n                  <div className=\"card-action\">\n                    <input type=\"text\" placeholder=\"add a comment\" />\n                  </div>\n\n                </form>\n\n              </div>\n            </div>\n          )\n        })\n     \n     \n     }\n\n\n    </div>\n  )\n}\nexport default Home","import React, { useState, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport materialize from 'materialize-css'\nimport {UserContext} from '../../App'\n\nconst Signin = () => {\n  const history = useHistory()\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const {state,dispatch} = useContext(UserContext)\n\n  const postData = () => {\n    \n    fetch(\"/signin\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email,\n      })\n    }).then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data.error) {\n          materialize.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n        }\n        else {\n          localStorage.setItem(\"guestBook-jwt\",data.token)\n          localStorage.setItem(\"guestBook-user\",JSON.stringify(data.user))\n          dispatch({type:\"USER\",payload:data.user})\n          materialize.toast({ html: \"signedin success\", classes: \"#43a047 green darken-1\" })\n          history.push('/')\n        }\n      }).catch(err => {\n        console.log(err)\n      })\n  }\n\n\n  return (\n    <div className=\"mycard\">\n      <div className=\"card auth-card\">\n        <h2>Wellcome</h2> <h2> Back</h2>\n        <input\n          type=\"text\"\n          placeholder=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}/>\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)} />\n        <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n          onClick={() => postData()}\n        >\n          Sign In\n            </button>\n\n      </div></div>\n\n  )\n}\nexport default Signin","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport materialize from 'materialize-css'\n\nconst Signup = () => {\n  const history = useHistory()\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [conPassword, setConPassword] = useState(\"\")\n\n  const postData = () => {\n    \n    if (name.length < 5) {\n      materialize.toast({ html: \"name length shoukd be more than 5 characters\", classes: \"#c62828 red darken-3\" })\n      return\n    }\n    if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n      materialize.toast({ html: \"invalid email\", classes: \"#c62828 red darken-3\" })\n      return\n    }\n    if (password.length < 8) {\n      materialize.toast({ html: \"password length shoukd be more than 8 characters\", classes: \"#c62828 red darken-3\" })\n      return\n    }\n\n    if (password !== conPassword) {\n      materialize.toast({ html: \"faild to confirm password\", classes: \"#c62828 red darken-3\" })\n      return\n    }\n    fetch(\"/signup\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password,\n        email,\n        name\n      })\n    }).then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data.error) {\n          materialize.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n        }\n        else {\n          materialize.toast({html:data.message,classes:\"#43a047 green darken-1\"})\n          history.push('/signin')\n        }\n      }).catch(err => {\n        console.log(err)\n      })\n  }\n\n\n\n  return (\n    <div className=\"mycard\">\n      <div className=\"card auth-card\">\n        <h2>Wellcome</h2>\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        /><input\n          type=\"text\"\n          placeholder=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"confirm-password\"\n          value={conPassword}\n          onChange={(e) => setConPassword(e.target.value)}\n        />\n        <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n          onClick={() => postData()}\n        >\n          Sign Up\n            </button>\n\n      </div></div>\n\n  )\n}\nexport default Signup","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport materialize from 'materialize-css'\n// import {IMGURI} from '../../keys'\n\nconst CreateMessage = () => {\n    const history = useHistory()\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n\n\n    useEffect(() => {\n        if (url) {\n            fetch(\"/createmessage\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n                },\n                body: JSON.stringify({\n                    title,\n                    body,\n                    photo: url\n                })\n            }).then(res => res.json())\n                .then(data => {\n\n                    if (data.error) {\n                        materialize.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\n                    }\n                    else {\n                        materialize.toast({ html: \"Created Successfully\", classes: \"#43a047 green darken-1\" })\n                        history.push('/')\n                    }\n                }).catch(err => {\n                    console.log(err)\n                })\n        }\n    }, [url])\n\n    const messageDetails = () => {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"guestBook-mern\")\n        data.append(\"cloud_name\", \"software1997\")\n        fetch(process.env.IMGURI, {\n            method: \"post\",\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => {\n                setUrl(data.url)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n\n    }\n\n\n    return (\n        <div className=\"card input-filed\"\n            style={{\n                margin: \"30px auto\",\n                maxWidth: \"500px\",\n                padding: \"20px\",\n                textAlign: \"center\"\n            }}\n        >\n            <input\n                type=\"text\"\n                placeholder=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"body\"\n                value={body}\n                onChange={(e) => setBody(e.target.value)}\n            />\n            <div className=\"file-field input-field\">\n                <div className=\"btn #64b5f6 blue darken-1\">\n                    <span>Uplaod Image</span>\n                    <input\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    />\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                onClick={() => messageDetails()}\n            >\n                Submit Message\n           </button>\n\n        </div>\n\n    )\n}\nexport default CreateMessage","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport materialize from 'materialize-css'\n// import { IMGURI } from '../../keys'\nimport { useParams } from 'react-router-dom'\n\nconst UpdateMessage = () => {\n    const { messageId } = useParams()\n    const history = useHistory()\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n    const [imageSrc, setImageSrc] = useState(\"\")\n    const [url, setUrl] = useState(\"\")\n\n\n    useEffect(() => {\n        fetch(`/specificmessage/${messageId}`, {\n            method: \"get\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n            }\n        }).then(res => res.json())\n            .then(result => {\n                console.log(result)\n                setTitle(result.message.title)\n                setBody(result.message.body)\n                setImageSrc(result.message.photo)\n            }).catch(err => {\n                console.log(err)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        if (url) {\n        updateImage()\n        }\n    }, [url])\n\n    const setMessageImage = () => {\n        const data = new FormData()\n        data.append(\"file\", image)\n        data.append(\"upload_preset\", \"guestBook-mern\")\n        data.append(\"cloud_name\", \"software1997\")\n        fetch(process.env.IMGURI, {\n            method: \"post\",\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => {\n                setUrl(data.url)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n\n    }\n\n    const updateTitle = () => {\n        fetch('/updatemessagetitle', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n            },\n            body: JSON.stringify({\n                title,\n                messageId\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n            if (res.error) {\n                materialize.toast({ html: res.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n                materialize.toast({ html: \"updated successfully\", classes: \"#43a047 green darken-1\" })\n                history.push('/')\n            }\n        }\n        )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    const updateBody = () => {\n        fetch('/updatemessagebody', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n            },\n            body: JSON.stringify({\n                body,\n                messageId\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n            if (res.error) {\n                materialize.toast({ html: res.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n                materialize.toast({ html: \"updated successfully\", classes: \"#43a047 green darken-1\" })\n                history.push('/')\n            }\n        }\n        )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    const updateImage = () => {\n        fetch('/updatemessagephoto', {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"guestBook-jwt\")\n            },\n            body: JSON.stringify({\n                photo:url,\n                messageId\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res);\n            if (res.error) {\n                materialize.toast({ html: res.error, classes: \"#c62828 red darken-3\" })\n            }\n            else {\n                materialize.toast({ html: \"updated successfully\", classes: \"#43a047 green darken-1\" })\n                history.push('/')\n            }\n        }\n        )\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n\n\n    return (\n        <div className=\"card input-filed\"\n            style={{\n                margin: \"30px auto\",\n                maxWidth: \"500px\",\n                padding: \"20px\",\n                textAlign: \"center\"\n            }}\n        >\n            <div>\n                <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\n                    src={imageSrc ? imageSrc : \"loading\"}\n                />\n\n            </div>\n            <input\n                type=\"text\"\n                placeholder=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)} />\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                onClick={() => updateTitle()}\n            >\n                Update Title\n           </button>\n\n\n            <input\n                type=\"text\"\n                placeholder=\"body\"\n                value={body}\n                onChange={(e) => setBody(e.target.value)}\n            />\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                onClick={() => updateBody()}\n            >\n                Update Body\n           </button>\n\n\n\n            <div className=\"file-field input-field\">\n                <div className=\"btn #64b5f6 blue darken-1\">\n                    <span>Uplaod Image</span>\n                    <input\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    />\n                </div>\n                <div className=\"file-path-wrapper\">\n                    <input className=\"file-path validate\" type=\"text\" />\n                </div>\n            </div>\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\n                onClick={() => setMessageImage()}\n            >\n                Update Image\n           </button>\n\n        </div>\n\n    )\n}\nexport default UpdateMessage","export const initialState = null\n\nexport const reducer = (state,action)=>{\n    if(action.type==\"USER\"){\n        return action.payload\n    }\n    if(action.type==\"CLEAR\"){\n        return null\n    }\n    return state\n} ","import React, { useEffect, createContext, useReducer, useContext } from 'react';\nimport NavBar from './components/NavBar'\nimport './App.css';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom'\n\nimport Home from './components/pages/Home'\nimport Signin from './components/pages/Signin'\nimport Signup from './components/pages/Signup'\nimport CreateMessage from './components/pages/CreateMessage'\nimport UpdateMessage from './components/pages/UpdateMessage'\n\nimport {reducer,initialState} from './components/reducers/userReducer'\n\nexport const UserContext = createContext()\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"guestBook-user\"))\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n      // history.push(\"/\")\n    }else{\n      history.push(\"/signin\") \n    }\n  },[])\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/createmessage\">\n        <CreateMessage />\n      </Route>\n      <Route path=\"/updatemessage/:messageId\">\n        <UpdateMessage />\n      </Route>\n      \n    </Switch>\n\n  )\n}\nconst UserContect = createContext()\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n    </BrowserRouter>    \n    </UserContext.Provider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}